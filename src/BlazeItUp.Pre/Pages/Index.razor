@page "/"
@page "/About"

@inject HttpClient client
<Loading IsLoading="@_isLoading">
    <MudPaper Elevation="5" Class="ma-10 pa-3">
        <MudGrid>
            <MudItem xs="12" sm="12" md="6">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h3">Blaze It up</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        @((MarkupString)@Markdig.Markdown.ToHtml(_content))
                    </MudCardContent>
                    <MudCardActions Class="d-flex justify-space-between">
                        <MudLink Color="Color.Primary" Underline="Underline.Always" Typo="Typo.button" Href="/Contribute">Ways to contribute</MudLink>
                        <MudLink Color="Color.Primary" Underline="Underline.Always" Typo="Typo.button" Href="/Contact"> Get in touch</MudLink>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="12" md="6">
                <div class="d-flex flex-column">
                    <img style="max-width:650px" class="img-responsive" src="img/elch-waiting-for-coutdown.png" />
                    <Countdown End="@timeline.Last().FinishedAt.Value" />
                </div>
            </MudItem>
            <MudItem xs="12">
                <Timeline Class="" Elements="timeline" />
            </MudItem>
        </MudGrid>
    </MudPaper>

    <MudGrid Class="pa-10">
        @foreach (var item in _mainArguments)
        {
            <MudItem xs="12" sm="6" lg="3">
                <MudCard Style="height:100%">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h4">@item.Title</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div class="d-flex flex-row justify-center mb-5">
                            <MudIcon Icon="@item.Icon" Class="argument-item" />
                        </div>
                        <MudText Typo="Typo.body1"> @item.Content</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }

    </MudGrid>
</Loading>


@code {

    private class MainArgument
    {
        public String Title { get; set; }
        public String Content { get; set; }
        public String Icon { get; set; }
    }

    private IEnumerable<MainArgument> _mainArguments;
    private String _content;

    private Boolean _isLoading = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _isLoading = true;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _mainArguments = await client.GetFromJsonAsync<IEnumerable<MainArgument>>("https://cdn.jsdelivr.net/gh/just-the-benno/BlazeItUp-Pre/content/main-arguments.json");
        _content = await client.GetAsStringAsync("https://cdn.jsdelivr.net/gh/just-the-benno/BlazeItUp-Pre/content/main-content.md");

        _isLoading = false;
    }

    List<TimelineElement> timeline = new List<TimelineElement>()
{
        new TimelineElement{ Name = "Initiative", Symbol =  "fas fa-brain",  IsCompleted = true },
        new TimelineElement{ Name = "Survey", Symbol =  "fas fa-poll",  IsCompleted = true },
        new TimelineElement{ Name = "Strategy", Symbol =  "fas fa-directions",  IsCompleted = false, FinishedAt = new DateTime(2021,02,28) },
        new TimelineElement{ Name = "Public Beta", Symbol =  "fas fa-rocket",  IsCompleted = false, FinishedAt = new DateTime(2021,03,31) },
    };

}
