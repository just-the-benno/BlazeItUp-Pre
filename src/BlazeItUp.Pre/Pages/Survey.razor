@page "/Survey"
@inject SurveyService service
@inject HttpClient client

<Loading IsLoading="@_isLoading">
    <MudGrid>
        <MudItem Class="pa-10" xs="12" sm="6" md="6" lg="9">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">About the survey</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    @((MarkupString)@Markdig.Markdown.ToHtml(_content))
                </MudCardContent>
                <MudCardActions>
                    <MudLink Color="Color.Primary" Typo="Typo.button" Href="https://forms.gle/BgFjHiB2WQEr5Tnn7" Target="_blank"> Take the Survey</MudLink>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem Class="pa-10" xs="12" sm="6" md="6" lg="3">
            <div class="d-flex flex-column">
                <InfoCard Icon="@Icons.Custom.Uncategorized.AlertSuccess" Color="mud-theme-success" Headline="Participants:">
                    <span>@_results.ParticipantAmount</span>
                </InfoCard>
                <InfoCard Icon="@Icons.Material.Filled.CalendarToday" Color="mud-theme-info mt-4" Headline="Duration">
                    <span>@($"{_results.FirstVote.ToShortDateString()} - {_results.LastVote.ToShortDateString()}")</span>
                </InfoCard>
            </div>
        </MudItem>
        @{ Int32 questionNumber = 1; }
        @foreach (var item in _results.Questions)
        {
            <MudItem Class="pa-10" xs="12" md="12" lg="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6" Class="mr-3">Q@(questionNumber++): @item.Name</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudSwitch Checked="@_displayDict[item]" CheckedChanged="(Boolean e) => AsTimeSeriesChanged(item)" Label="As Timeseries" />
                        </CardHeaderActions>
                    </MudCardHeader>

                    <MudCardContent>
                        @if (item.IsMultipleChoice == false)
                        {
                            @if (_displayDict[item] == false)
                            {
                                <QuestionAsPieChart Question="item" />
                            }
                            else
                            {
                                <QuestionTimelineAsPieChart Question="item" />
                            }
                        }
                        else
                        {
                            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true">
                                <MudTabPanel Text="Abolute">
                                    @if (_displayDict[item] == false)
                                    {
                                        <QuestionAsBarChart ShowAsAbsolute="true" Question="item" />
                                    }
                                    else
                                    {
                                        <QuestionTimelineAsBarChart ShowAsAbsolute="true" Question="item" />
                                    }
                                </MudTabPanel>
                                <MudTabPanel Text="Relative">
                                    @if (_displayDict[item] == false)
                                    {
                                        <QuestionAsBarChart ShowAsAbsolute="false" Question="item" />
                                    }
                                    else
                                    {
                                        <QuestionTimelineAsBarChart ShowAsAbsolute="false" Question="item" />

                                    }
                                </MudTabPanel>
                            </MudTabs>


                        }
                    </MudCardContent>
                    @*<MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                        </MudCardActions>*@
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</Loading>





@code {
    private Boolean _isLoading = true;

    private SurveyResults _results;
    private String _content;

    private Dictionary<Question, Boolean> _displayDict = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _results = await service.LoadSurveyData();
        _content = await client.GetAsStringAsync("https://gitcdn.link/repo/just-the-benno/BlazeItUp-Pre/master/content/survey-content.md");

        _displayDict = _results.Questions.ToDictionary(x => x, x => false);

        _isLoading = false;

    }

    private void AsTimeSeriesChanged(Question question)
    {
        _displayDict[question] = !_displayDict[question];
    }

}
